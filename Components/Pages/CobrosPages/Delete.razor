@page "/Cobro/Delete/{CobroId:int}"
@inject CobroService cobroService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<div class="container">
    <div class="shadow-lg">
        @*Header*@
        <div class="card-header text-center">
            <h3><strong>Detalle del cobro</strong></h3>
        </div>

        @*Body*@
        <div class="card-body">
            <div class="text-center mt-3">
                <h5<strong>¿Está seguro de que desea eliminar este cobro?</strong></h5>

            </div>
            <ul class="mt-4">
                <li><strong>CobroId: </strong>@Cobro.CobroId</li>
                <li><strong>Deudor: </strong>@Cobro.Deudores.Nombres</li>
                <li><strong>Fecha: </strong>@Cobro.Fecha</li>
                <li><strong>Monto: </strong>@Cobro.Monto</li>

            </ul>
        </div>
        @*Footer*@
        <div class="card-footer">
            <button type="button" class="btn btn-primary bi bi-arrow-left mt-3" @onclick="Volver">Volver</button>
            <button type="button" class="btn btn-danger mt-3" @onclick="Eliminar">Eliminar</button>
        </div>
    </div>

</div>

@code {
    [Parameter]
    public int CobroId { get; set; }
    public Cobros Cobro { get; set; } = new Cobros();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Cobro = await cobroService.Buscar(CobroId);
    }

    private async Task Eliminar()
    {
        var Eliminar = await cobroService.Eliminar(CobroId);

        if (Eliminar)
        {
            Mensaje = "Se ha eliminadao correctamente. ";
            Volver();
        }
        else
        {
            Mensaje = "No se ha podido eliminar. ";
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Cobro/Index");
    }
}
